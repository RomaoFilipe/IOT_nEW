  <head>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/three@0.128.0/build/three.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/three@0.128.0/examples/js/controls/OrbitControls.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>
<div class="modal fade" id="fieldDetailsModal-<%= field.id %>" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-xl"> <!-- Aumentei o modal para ocupar mais espaço horizontal -->
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Detalhes do Terreno</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- Modelo 3D do Terreno -->
        <div class="mb-4 text-center">
          <div id="terrain-viewer-<%= field.id %>" style="width: 100%; height: 300px; background-color: #f8f9fa;"></div>
        </div>

        <h4 class="mb-3">Nome do Terreno: <%= field.name %></h4>
        <p><strong>Tipo de Plantação:</strong> <%= field.field_type %></p>
        <p><strong>Modelo 3D:</strong> <%= field.model_path %></p>
        <p><strong>Posição:</strong> X: <%= field.position_x %>, Y: <%= field.position_y %>, Z: <%= field.position_z %></p>

        <!-- Previsão do Tempo -->
        <div class="card mb-4 shadow-sm">
          <div class="card-header bg-light text-center">
            <h5 class="mb-0">Previsão do Tempo - 5 Dias</h5>
          </div>
          <div class="card-body d-flex justify-content-around">
            <% @weather_forecast.each do |forecast| %>
              <div class="weather-card text-center px-2">
                <p class="fw-bold text-muted mb-1"><%= forecast[:day].capitalize %></p>
                <i class="fas fa-cloud fa-2x text-primary"></i>
                <p class="fs-5 fw-bold mt-2"><%= forecast[:temperature] %>&deg;C</p>
                <div class="text-muted">
                  <p class="mb-1"><i class="fas fa-tint"></i> <%= forecast[:rain] %>mm</p>
                  <p><i class="fas fa-wind"></i> <%= forecast[:wind_speed] %>km/h</p>
                </div>
              </div>
            <% end %>
          </div>
        </div>

        <!-- Análise do Solo e Agendamento de Irrigação -->
        <div class="row g-3">
          <!-- Análise do Solo -->
          <div class="col-md-6">
            <div class="card shadow-sm h-100">
              <div class="card-header bg-success text-white">
                <h5 class="mb-0 text-center">Análise do Solo</h5>
              </div>
              <div class="card-body">
                <p><strong>Nível de pH:</strong> 6.5</p>
                <p><strong>Nitrogênio (N):</strong> Moderado (45%)</p>
                <p><strong>Fósforo (P):</strong> Moderado (35%)</p>
                <p><strong>Potássio (K):</strong> Moderado (40%)</p>
              </div>
            </div>
          </div>

          <!-- Agendamento de Irrigação -->
          <div class="col-md-6">
            <div class="card shadow-sm h-100">
              <div class="card-header bg-primary text-white text-center">
                <h5 class="mb-0">Agendamento de Irrigação</h5>
              </div>
              <div class="card-body">
                <!-- Botões de horários -->
                <div class="d-flex flex-wrap gap-2 justify-content-center">
                  <% (0..23).each do |hour| %>
                    <button 
                      type="button" 
                      class="btn btn-outline-primary irrigation-btn" 
                      style="width: 60px; height: 60px; font-size: 0.8rem;" 
                      data-hour="<%= hour %>">
                      <%= "%02d:00" % hour %>
                    </button>
                  <% end %>
                </div>
                <p class="mt-3 text-muted text-center">
                  <span id="selected-count">0</span> horários de irrigação agendados
                </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Consumo de Recursos -->
        <div class="card my-4 shadow-sm">
          <div class="card-header bg-light text-center">
            <h5 class="mb-0">Consumo de Recursos</h5>
          </div>
          <div class="card-body d-flex justify-content-around">
            <div class="text-center">
              <i class="fas fa-tint fa-2x text-primary"></i>
              <p class="fw-bold mt-2">Uso de Água</p>
              <p>120L/dia</p>
            </div>
            <div class="text-center">
              <i class="fas fa-leaf fa-2x text-success"></i>
              <p class="fw-bold mt-2">Fertilizante</p>
              <p>2.5kg/semana</p>
            </div>
            <div class="text-center">
              <i class="fas fa-bolt fa-2x text-warning"></i>
              <p class="fw-bold mt-2">Energia</p>
              <p>5kWh/dia</p>
            </div>
          </div>
        </div>

        <!-- Histórico de Atividades -->
        <div class="card my-3">
          <div class="card-header bg-warning text-dark">
            <h5 class="mb-0">Histórico de Atividades</h5>
          </div>
          <div class="card-body">
            <ul class="list-group">
              <% @activity_history.each do |activity| %>
                <li class="list-group-item d-flex align-items-center">
                  <i class="fas fa-check-circle text-success me-2"></i>
                  <%= activity %>
                </li>
              <% end %>
            </ul>
          </div>
        </div>

        <!-- Predições e Alertas -->
        <div class="card my-4 shadow-sm">
          <div class="card-header bg-light text-center">
            <h5 class="mb-0">Predições e Alertas</h5>
          </div>
          <div class="card-body d-flex justify-content-around">
            <div class="text-center">
              <i class="fas fa-chart-line fa-2x text-purple"></i>
              <p class="fw-bold mt-2">Produção Esperada</p>
              <p>4.2 tons/hectare</p>
            </div>
            <div class="text-center">
              <i class="fas fa-hourglass-start fa-2x text-orange"></i>
              <p class="fw-bold mt-2">Dias para Colheita</p>
              <p>45 dias</p>
            </div>
            <div class="text-center">
              <i class="fas fa-seedling fa-2x text-green"></i>
              <p class="fw-bold mt-2">Estágio de Crescimento</p>
              <p>Florescimento</p>
            </div>
          </div>
        </div>

        <!-- Botão de Eliminar Terreno -->
        <div class="text-center mt-4">
          <%= button_to "Eliminar Terreno", field_path(field), method: :delete, class: "btn btn-danger" %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
  const containerId = 'terrain-viewer-<%= field.id %>';
  const container = document.getElementById(containerId);

  if (!container) {
    console.error("O container para o modelo 3D não foi encontrado.");
    return;
  }

  // Configurar a cena
  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);
  const renderer = new THREE.WebGLRenderer({ antialias: true });
  renderer.setSize(container.clientWidth, container.clientHeight);
  container.appendChild(renderer.domElement);

  // Adicionar luzes
  const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);
  scene.add(ambientLight);

  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);
  directionalLight.position.set(10, 10, 10).normalize();
  scene.add(directionalLight);

  // Verificar o caminho do modelo 3D
  const modelPath = '<%= field.model_path %>';
  console.log("Caminho do modelo 3D:", modelPath); // Log do caminho

  if (!modelPath) {
    console.error("Caminho do modelo 3D não foi fornecido.");
    return;
  }

  // Carregar o modelo 3D
  const loader = new THREE.GLTFLoader();
  loader.load(
    modelPath,
    (gltf) => {
      const model = gltf.scene;
      model.scale.set(2, 2, 2); // Ajuste a escala
      scene.add(model);

      // Ajustar a posição da câmera com base no modelo
      const box = new THREE.Box3().setFromObject(model);
      const size = box.getSize(new THREE.Vector3());
      const center = box.getCenter(new THREE.Vector3());

      camera.position.set(center.x, center.y, size.z * 2);
      camera.lookAt(center);

      animate();
    },
    (xhr) => {
      console.log((xhr.loaded / xhr.total) * 100 + '% carregado');
    },
    (error) => {
      console.error("Erro ao carregar o modelo 3D:", error);
    }
  );

  // Função de animação
  function animate() {
    requestAnimationFrame(animate);
    renderer.render(scene, camera);
  }
});

</script>


