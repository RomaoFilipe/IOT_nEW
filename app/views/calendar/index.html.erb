<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='utf-8' />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agriculture Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link rel="stylesheet" href="styles.css"> <!-- Arquivo CSS personalizado -->

    <%= stylesheet_link_tag "fullcalendar/core", media: "all" %>
    <%= stylesheet_link_tag "fullcalendar/daygrid", media: "all" %>
    <%= stylesheet_link_tag "fullcalendar/timegrid", media: "all" %>
    <script src='https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.15/index.global.min.js'></script>
    <script src='https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@6.1.15/index.global.min.js'></script>
    
</head>
<div id="calendar"></div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var calendarEl = document.getElementById('calendar');
    var calendar = new FullCalendar.Calendar(calendarEl, {
      initialView: 'dayGridMonth',
      selectable: true, // Permite seleção de datas
      editable: true,   // Permite arrastar e editar eventos
      events: '/tasks.json', // Carrega tarefas do controlador Tasks

      select: function(info) {
        // Solicita ao utilizador o título e o tipo de tarefa
        var title = prompt('Enter Task Title:');
        var taskType = prompt('Enter Task Type (e.g., Planting, Watering, Harvesting):');
        var status = "Pending"; // Define um status padrão para a tarefa
        if (title) {
          var taskData = {
            title: title,
            start: info.startStr,
            end: info.endStr,
            task_type: taskType,
            status: status
          };

          // Faz um POST para o controlador para criar a nova tarefa
          fetch('/tasks', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ task: taskData })
          })
          .then(response => response.json())
          .then(task => {
            // Adiciona a nova tarefa ao calendário
            calendar.addEvent({
              id: task.id,
              title: task.title,
              start: task.start,
              end: task.end,
              task_type: task.task_type,
              status: task.status
            });
          });
        }
        calendar.unselect(); // Desseleciona o intervalo no calendário
      },

      eventClick: function(info) {
        // Exibe detalhes da tarefa ao clicar no evento (opcional)
        alert('Task: ' + info.event.title + '\nType: ' + info.event.extendedProps.task_type + '\nStatus: ' + info.event.extendedProps.status);
      }
    });
    calendar.render();
  });
</script>


</html>